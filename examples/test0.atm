// This is a comment.
// C-style comments not supported for simplicity

// This assigns the variable A to an NFA that accepts the character 'a'
A = "a";

// This assigns the variable B to an NFA that accepts the string "bc"
// NOTE: assigning bc and (bc) would be logically equivalent
B = "bc";

// This assigns the variable C to an NFA that accepts: "a" or "b" or "cd"
C = "a"|"b"|"cd";

// This assigns the variable D to an NFA that accepts the KleeneStar of "xyz".
D = ("xyz")*;

// This assigns the variable E to an NFA that accepts either "j" or KleeneStar of "x"
E = j|("x")*;

// This assigns F to an NFA that accepts A concatenated with B ("abc")
F = A ^ B;

// NOTE: the only distinction between NFA variables and strings is the useage of " "

// Printing to stdout follows this syntax
PRINT: This is a print/debug statement;

// Running an NFA with an input looks like this. This will output a value on accepting or not.
RUN: F << "abc";

// List of operators
// Concatenation (^): "ab" is "a" concatenated with "b". Can concatenate 2 NFAs
// Union (|)		: "a|b" represents the choice of "a" or "b".
// KleeneStar (*)	: a* represents any amount of the character "a".
// Pos. Closure (+)	: a+ means 1 or more "a" characters.
// Optional			: a? means 0 or 1 occurences of "a".
// to (-)			: a-z means all characters from a to z.

